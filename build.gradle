buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'idea'
apply plugin: 'forge'
apply plugin: 'curseforge'


group = package_group
archivesBaseName = mod_name
version = "${getDate()}"

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd')
    return formattedDate
}

minecraft {
    version = "1.7.10-10.13.4.1448-1.7.10"
    runDir = "run"

    replaceIn "NOVA.java"
    replace "@VERSION@", getDate()

    if (project.hasProperty('mappings_version'))
        mappings = project.mappings_version
}

curse {
    dependsOn 'reobf'
    
    onlyIf {
        return project.hasProperty('curse_token') && System.getenv("CURSE") != null && System.getenv("CURSE").equalsIgnoreCase("true")
    }

    if (project.hasProperty('curse_token')) apiKey = project.curse_token
    projectId = project.curse_projectId
    releaseType = project.hasProperty('curse_buildType') ? "${curse_buildType}".toString() : 'release'
    //additionalArtifact deobfJar, sourceJar, deobfJar
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

repositories {
    maven { // WAILA
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { // CCC/NEI (for WAILA)
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
}

dependencies {
    compile "mcp.mobius.waila:Waila:1.5.5_1.7.10"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.3.64:dev"
    compile fileTree(dir: 'libs', include: '*.jar')
}


// add a source jar
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

// add a javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

// because the normal output has been made to be obfuscated
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

tasks.build.dependsOn sourceJar, javadocJar, deobfJar

tasks.withType(JavaCompile) { task ->
    task.options.encoding = 'UTF-8'
}


// Uncomment this line if you want to auto-upload to CurseForge when you build. This requires you to setup curse.gradle yourself.
// fileTree('gradle').include('curse.gradle').collect().sort().each { apply from: it }

//because IDEA is stupido :(
idea { module { inheritOutputDirs = true } }